class Solution {
  public:
    string countAndSay(int n) {
        if(n == 1) return "1";

        string res = "1"; // Initial string (for n = 1)

        // Generate from 2 to n
        for(int i = 2; i <= n; i++) {
            string curr = "";
            int count = 1;

            for(int j = 1; j < res.length(); j++) {
                if(res[j] == res[j - 1]) {
                    count++;
                } else {
                    curr += to_string(count);  // Count of group
                    curr += res[j - 1];        // Which digit
                    count = 1;                 // Reset count
                }
            }

            // Add last group
            curr += to_string(count);
            curr += res.back();  // res.back() = last character

            res = curr; // Update result string
        }

        return res;
    }
};
