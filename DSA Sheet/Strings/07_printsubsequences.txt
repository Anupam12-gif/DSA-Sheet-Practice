class Solution {
  public:
    void generateSubsequences(string &s, int index, string current, vector<string> &result) {
        // base case: jab pura string traverse ho gaya
        if (index == s.length()) {
            if (!current.empty())  // agar subsequence non-empty hai toh
                result.push_back(current);  
            return;
        }

        // INCLUDE karo current character ko
        generateSubsequences(s, index + 1, current + s[index], result);

        // EXCLUDE karo current character ko
        generateSubsequences(s, index + 1, current, result);
    }

    vector<string> AllPossibleStrings(string s) {
        vector<string> result;
        generateSubsequences(s, 0, "", result);  // recursion start
        sort(result.begin(), result.end());     // lexicographical sort
        return result;
    }
};
