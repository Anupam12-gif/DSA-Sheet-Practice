class Solution {
public:
    bool wordBreak(string &s, vector<string>& dictionary) {
        unordered_set<string> dict(dictionary.begin(), dictionary.end());
        int n = s.length();
        vector<bool> dp(n + 1, false);
        dp[0] = true; // Empty string is always valid

        for (int i = 1; i <= n; ++i) {
            for (int j = 0; j < i; ++j) {
                string word = s.substr(j, i - j);
                if (dp[j] && dict.find(word) != dict.end()) {
                    dp[i] = true;
                    break; // No need to check further
                }
            }
        }

        return dp[n];
    }
};
