// ✅ Problem: Minimize the Maximum Difference between Heights
// 📁 Category: Greedy
// 🔗 GFG Link: https://practice.geeksforgeeks.org/problems/minimize-the-heights-ii/1
// 💡 Approach: Sort + Greedy (Increase min, Decrease max)

// User function template for C++

class Solution {
  public:
    int getMinDiff(vector<int> &arr, int k) {
        int n = arr.size();
        if (n == 1) return 0;

        sort(arr.begin(), arr.end());

        int result = arr[n - 1] - arr[0];
        int smallest = arr[0] + k;
        int largest = arr[n - 1] - k;

        for (int i = 1; i < n; i++) {
            int subtract = arr[i] - k;
            int add = arr[i - 1] + k;

            if (subtract < 0) continue;

            int new_min = min(smallest, subtract);
            int new_max = max(largest, add);

            result = min(result, new_max - new_min);
        }

        return result;
    }
};

