class Solution {
  public:
    // Function to return length of longest subsequence of consecutive integers.
    int longestConsecutive(vector<int>& arr) {
        int n = arr.size();
        unordered_set<int> s;
        for (int i = 0; i < n; i++)
            s.insert(arr[i]);

        int maxLen = 0;

        for (int i = 0; i < n; i++) {
            if (s.find(arr[i] - 1) == s.end()) {  // Only start if it's the start of a sequence
                int curNum = arr[i];
                int len = 1;

                while (s.find(curNum + 1) != s.end()) {
                    curNum++;
                    len++;
                }

                maxLen = max(maxLen, len);
            }
        }

        return maxLen;
    }
};
