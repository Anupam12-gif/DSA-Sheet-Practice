// ✅ Problem: Minimum Number of Jumps to Reach End
// 📁 Category: Greedy
// 🔗 GFG Link: https://practice.geeksforgeeks.org/problems/minimum-number-of-jumps-1587115620/1
// 💡 Approach: Greedy — Track jumps, steps left, and farthest point




class Solution {
  public:
    int minJumps(vector<int>& arr) {
        int n=arr.size();
        if(n==1)
        return 0;
        if(arr[0]==0)
        return -1;
        int jumps=1;
        int steps=arr[0];
        int maxReach=arr[0];
        for(int i=1;i<n;i++){
            if(i==n-1)
            return jumps;
            maxReach=max(maxReach,i+arr[i]);
            steps--;
            if(steps==0){
                jumps++;
                if(i>=maxReach){
                    return -1;
                }
                    steps=maxReach-i;
            }
        }
        return -1;
        
    }
};
