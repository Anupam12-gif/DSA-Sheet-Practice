// âœ… Problem: Find the maximum sum of a subarray (contiguous)
// ðŸ”— Approach: Kadane's Algorithm (O(n) time, O(1) space)



class Solution {
  public:
    int maxSubarraySum(vector<int> &arr) {
        int curr_sum=0;
        int max_so_far=INT_MIN;
        int n=arr.size();
        for(int i=0;i<n;i++){
            curr_sum+=arr[i];
            if(curr_sum>max_so_far){
                max_so_far=curr_sum;
            }
            if(curr_sum<0){
                curr_sum=0;
            }
        }
        return max_so_far;
    }
};