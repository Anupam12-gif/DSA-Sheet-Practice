class Solution {
  public:
  int largestAreaRectangle(vector<int> &heights){
      stack<int>st;
      heights.push_back(0);
      int maxA=0;
      for(int i=0;i<heights.size();i++){
          while(!st.empty() && heights[i]<heights[st.top()]){
              int height=heights[st.top()];
              st.pop();
              int width=st.empty()?i:i-st.top()-1;
              maxA=max(maxA,height*width);
          }
          st.push(i);
      }
      return maxA;
  }
    int maxArea(vector<vector<int>> &mat) {
        int n=mat.size();
        int m=mat[0].size();
        int maxAreaOverall=0;
        vector<int>heights(m,0);
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(mat[i][j]==1)
                heights[j]+=1;
                else
                heights[j]=0;
            }
            int area=largestAreaRectangle(heights);
            maxAreaOverall=max(maxAreaOverall,area);
        }
        return maxAreaOverall;
    }
};